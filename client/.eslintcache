[{"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\index.js":"1","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\App.js":"2","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Navbar.jsx":"3","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\store\\index.jsx":"4","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\index.jsx":"5","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\AppbarReducer.jsx":"6","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\types.jsx":"7","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\AppbarActions.jsx":"8","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\HomePage.jsx":"9","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Businesses.jsx":"10","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Footer.jsx":"11","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\BusinessesReducer.jsx":"12","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Profile.jsx":"13","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Blogs.jsx":"14","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Test.jsx":"15","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\BlogsReducer.jsx":"16","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Forums.jsx":"17","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\ForumsReducer.jsx":"18","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\NewPost.jsx":"19","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\CurrentPost.jsx":"20","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Chart.jsx":"21","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Login.jsx":"22","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\UserReducer.jsx":"23","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\UserActions.jsx":"24","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\BusinessesActions.jsx":"25","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\ForumsActions.jsx":"26","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\PrivateRoute.jsx":"27","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\BlogsActions.jsx":"28","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Faq.jsx":"29"},{"size":219,"mtime":1611861714387,"results":"30","hashOfConfig":"31"},{"size":589,"mtime":1613697549190,"results":"32","hashOfConfig":"31"},{"size":11592,"mtime":1615140135942,"results":"33","hashOfConfig":"31"},{"size":385,"mtime":1615222014350,"results":"34","hashOfConfig":"31"},{"size":544,"mtime":1613428654876,"results":"35","hashOfConfig":"31"},{"size":334,"mtime":1612210836114,"results":"36","hashOfConfig":"31"},{"size":829,"mtime":1615138748900,"results":"37","hashOfConfig":"31"},{"size":199,"mtime":1611866595464,"results":"38","hashOfConfig":"31"},{"size":13636,"mtime":1615221938905,"results":"39","hashOfConfig":"31"},{"size":10281,"mtime":1615139160501,"results":"40","hashOfConfig":"31"},{"size":3441,"mtime":1615252484103,"results":"41","hashOfConfig":"31"},{"size":961,"mtime":1614889029915,"results":"42","hashOfConfig":"31"},{"size":17139,"mtime":1615141691294,"results":"43","hashOfConfig":"31"},{"size":5190,"mtime":1614996409510,"results":"44","hashOfConfig":"31"},{"size":819,"mtime":1613020780182,"results":"45","hashOfConfig":"31"},{"size":470,"mtime":1614878164397,"results":"46","hashOfConfig":"31"},{"size":6700,"mtime":1614887682921,"results":"47","hashOfConfig":"31"},{"size":760,"mtime":1613698699324,"results":"48","hashOfConfig":"31"},{"size":3489,"mtime":1614996556379,"results":"49","hashOfConfig":"31"},{"size":5666,"mtime":1615252699958,"results":"50","hashOfConfig":"31"},{"size":1617,"mtime":1614998444777,"results":"51","hashOfConfig":"31"},{"size":6801,"mtime":1615253261520,"results":"52","hashOfConfig":"31"},{"size":581,"mtime":1615138799856,"results":"53","hashOfConfig":"31"},{"size":1791,"mtime":1615138774225,"results":"54","hashOfConfig":"31"},{"size":2543,"mtime":1614996242023,"results":"55","hashOfConfig":"31"},{"size":3301,"mtime":1614611934909,"results":"56","hashOfConfig":"31"},{"size":743,"mtime":1613698563009,"results":"57","hashOfConfig":"31"},{"size":1649,"mtime":1614889140499,"results":"58","hashOfConfig":"31"},{"size":5024,"mtime":1615253240641,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"wmh18t",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\index.js",[],["128","129"],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\App.js",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Navbar.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\store\\index.jsx",["130"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;\r\n","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\index.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\AppbarReducer.jsx",["131"],"import { UPDATE_APPBAR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  menuSelected: 0,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_APPBAR:\r\n      return {\r\n        ...state,\r\n        menuSelected: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\types.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\AppbarActions.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\HomePage.jsx",["132"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { updateAppbar } from \"../actions/AppbarActions\";\r\nimport { getLatestBlogs } from \"../actions/BlogsActions\";\r\n\r\nimport Particles from \"react-particles-js\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  ButtonBase,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport Footer from \"./Footer\";\r\n\r\nimport Popularity from \"../Images/popularity.svg\";\r\nimport Group from \"../Images/group.svg\";\r\nimport Research from \"../Images/research.svg\";\r\nimport CNTower from \"../Images/cntower2.png\";\r\nimport Toronto from \"../Images/toronto.jpg\";\r\nimport Montreal from \"../Images/montreal.jpg\";\r\nimport Vancouver from \"../Images/vancouver.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    minWidth: 300,\r\n    width: \"100%\",\r\n  },\r\n  image: {\r\n    position: \"relative\",\r\n    height: 200,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100% !important\", // Overrides inline-style\r\n      height: 100,\r\n    },\r\n    \"&:hover, &$focusVisible\": {\r\n      zIndex: 1,\r\n      \"& $imageBackdrop\": {\r\n        opacity: 0.15,\r\n      },\r\n      \"& $imageMarked\": {\r\n        opacity: 0,\r\n      },\r\n      \"& $imageTitle\": {\r\n        border: \"4px solid currentColor\",\r\n      },\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center 40%\",\r\n  },\r\n  imageBackdrop: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n  imageTitle: {\r\n    position: \"relative\",\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\r\n      theme.spacing(1) + 6\r\n    }px`,\r\n    fontWeight: \"900\",\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: \"absolute\",\r\n    bottom: -2,\r\n    left: \"calc(50% - 9px)\",\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n  avatar: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  largeAvatar: {\r\n    width: theme.spacing(30),\r\n    height: theme.spacing(30),\r\n  },\r\n}));\r\n\r\nconst HomePage = ({ updateAppbar, getLatestBlogs, blogs: { latestBlogs } }) => {\r\n  useEffect(() => {\r\n    updateAppbar(0);\r\n    getLatestBlogs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Particles\r\n        style={{ position: \"absolute\" }}\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        params={{\r\n          particles: {\r\n            color: {\r\n              value: \"#f3e7fd\",\r\n            },\r\n            line_linked: {\r\n              color: {\r\n                // value: \"rgb(108, 237, 232)\",\r\n                value: \"#8EC5FC\",\r\n              },\r\n            },\r\n            number: {\r\n              value: 40,\r\n            },\r\n            size: {\r\n              value: 15,\r\n            },\r\n            // url: `${Background}`\r\n          },\r\n        }}\r\n      />\r\n      <div className=\"welcome-content\">\r\n        <div style={{ width: \"80%\", paddingTop: \"6rem\", zIndex: \"10\" }}>\r\n          <Typography\r\n            variant=\"h3\"\r\n            align=\"center\"\r\n            paragraph=\"true\"\r\n            style={{\r\n              fontWeight: \"900\",\r\n              textShadow: \"1px 1px\",\r\n            }}\r\n          >\r\n            Find the finest Canadian businesses and services catered for you\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            align=\"center\"\r\n            paragraph=\"true\"\r\n            style={{ color: \"#FFFFFF\", fontWeight: \"900\" }}\r\n          >\r\n            Providing an interconnected array of solutions\r\n          </Typography>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"main-button\"\r\n              href=\"/businesses\"\r\n              aria-label=\"Explore Businesses\"\r\n            >\r\n              <p className=\"button-text\">Explore</p>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div style={{ display: \"grid\", position: \"relative\" }}>\r\n          <div style={{ position: \"relative\", transform: \"translateY(57.5%)\" }}>\r\n            <img\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, 50%)\",\r\n                bottom: \"100%\",\r\n                zIndex: \"-1\",\r\n              }}\r\n              alt=\"CN Tower\"\r\n              src={CNTower}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Grid container direction=\"row\" justify=\"center\" className=\"overview\">\r\n        <Grid item md={3} />\r\n        <Grid item md={6}>\r\n          <div>\r\n            <Typography\r\n              variant=\"h3\"\r\n              align=\"center\"\r\n              paragraphy=\"true\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              The future starts now\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle1\" align=\"justify\" paragraphy=\"true\">\r\n              Canadian Solutions is an IT company based in Toronto, Canada,\r\n              which specializes in providing small businesses exposure\r\n              virtually. We aim to provide an interconnected array of services\r\n              and products on an online platform that will bring local\r\n              businesses together in Canada. The scope of the company is to help\r\n              registered organizations advertise their services to each other or\r\n              their clients effortlessly.\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={3} />\r\n      </Grid>\r\n\r\n      <Grid container direction=\"row\" justify=\"center\" className=\"what-we-do\">\r\n        <Grid item md={3} />\r\n        <Grid item md={6}>\r\n          <div>\r\n            <Typography\r\n              variant=\"h3\"\r\n              align=\"center\"\r\n              paragraphy=\"true\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              What we do\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle1\" align=\"center\" paragraphy=\"true\">\r\n              We provide a platform for you where your business matters\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={3} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          md={10}\r\n          spacing={2}\r\n          style={{ paddingTop: \"60px\" }}\r\n        >\r\n          <Grid item md={4} align=\"center\">\r\n            <div>\r\n              <img height=\"25%\" width=\"25%\" src={Popularity} alt=\"Exposure\" />\r\n              <Typography variant=\"h5\" align=\"center\" paragraph=\"true\">\r\n                Exposure\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" align=\"center\" paragraph=\"true\">\r\n                Increasing your clientele by giving you an outlet and helping\r\n                you find the right services that could boost your business.\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item md={4} align=\"center\">\r\n            <div>\r\n              <img height=\"25%\" width=\"25%\" src={Group} alt=\"Interactions\" />\r\n              <Typography variant=\"h5\" align=\"center\" paragraph=\"true\">\r\n                Interactions\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" align=\"center\" paragraph=\"true\">\r\n                Providing you with a platform that makes it easier for you to\r\n                interact with other businesses where you can learn and share.\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item md={4} align=\"center\">\r\n            <div>\r\n              <img height=\"25%\" width=\"25%\" src={Research} alt=\"Research\" />\r\n              <Typography variant=\"h5\" align=\"center\" paragraph=\"true\">\r\n                Research\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" align=\"center\" paragraph=\"true\">\r\n                Preparing a collection of research that will help you survive\r\n                and grow in this economy. Useful tips and documents will be\r\n                posted in the Blogs section.\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          md={9}\r\n          sm={10}\r\n          style={{ paddingTop: \"60px\" }}\r\n        >\r\n          <Typography\r\n            variant=\"h3\"\r\n            align=\"center\"\r\n            paragraphy=\"true\"\r\n            style={{ fontWeight: \"900\" }}\r\n          >\r\n            Our Locations\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          md={8}\r\n          sm={12}\r\n          style={{ paddingTop: \"30px\" }}\r\n        >\r\n          <Grid item md={4} sm={4}>\r\n            <Avatar\r\n              alt=\"Montreal\"\r\n              className={classes.largeAvatar}\r\n              src={Montreal}\r\n            />\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              align=\"center\"\r\n              paragraph=\"true\"\r\n              style={{ paddingTop: \"10px\" }}\r\n            >\r\n              Montreal\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={4} sm={4}>\r\n            <Avatar\r\n              alt=\"Toronto\"\r\n              className={classes.largeAvatar}\r\n              src={Toronto}\r\n            />\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              align=\"center\"\r\n              paragraph=\"true\"\r\n              style={{ paddingTop: \"10px\" }}\r\n            >\r\n              Toronto (main office)\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={4} sm={4}>\r\n            <Avatar\r\n              alt=\"Vancouver\"\r\n              className={classes.largeAvatar}\r\n              src={Vancouver}\r\n            />\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              align=\"center\"\r\n              paragraph=\"true\"\r\n              style={{ paddingTop: \"10px\" }}\r\n            >\r\n              Vancouver\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container direction=\"row\" justify=\"center\" className=\"blog-posts\">\r\n        <Grid item md={3} />\r\n        <Grid item md={6}>\r\n          <div>\r\n            <Typography\r\n              variant=\"h3\"\r\n              align=\"center\"\r\n              paragraphy=\"true\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              Recent Blog Posts\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={3} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          md={10}\r\n          spacing={2}\r\n          style={{ paddingTop: \"60px\" }}\r\n        >\r\n          {latestBlogs.map((item) => (\r\n            <Grid item md={4} align=\"center\">\r\n              <div className={classes.root}>\r\n                <ButtonBase\r\n                  focusRipple\r\n                  className={classes.image}\r\n                  focusVisibleClassName={classes.focusVisible}\r\n                  style={{\r\n                    width: \"100%\",\r\n                  }}\r\n                  href={item.url}\r\n                  target=\"_blank\"\r\n                  aria-label=\"Latest Blog Posts\"\r\n                >\r\n                  <span\r\n                    className={classes.imageSrc}\r\n                    style={{\r\n                      backgroundImage: `url(${item.image})`,\r\n                      backgroundSize: \"cover\",\r\n                    }}\r\n                  />\r\n                  <span className={classes.imageBackdrop} />\r\n                  <span className={classes.imageButton}>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"subtitle1\"\r\n                      color=\"inherit\"\r\n                      className={classes.imageTitle}\r\n                    >\r\n                      {item.title}\r\n                      <span className={classes.imageMarked} />\r\n                    </Typography>\r\n                  </span>\r\n                </ButtonBase>{\" \"}\r\n              </div>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          style={{ paddingTop: \"50px\" }}\r\n        >\r\n          <Button\r\n            aria-label=\"View all blog posts\"\r\n            variant=\"contained\"\r\n            className=\"main-button\"\r\n            href=\"/blogs\"\r\n          >\r\n            <p className=\"button-text\">View All</p>\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appbar: state.appbar,\r\n  blogs: state.blogs,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateAppbar,\r\n  getLatestBlogs,\r\n})(HomePage);\r\n","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Businesses.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Footer.jsx",["133"],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\BusinessesReducer.jsx",["134"],"import {\r\n  GET_BUSINESS,\r\n  UPDATE_BUSINESS,\r\n  GET_BUSINESS_EMPTY,\r\n  GET_ALL_BUSINESSES,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  businesses: [\r\n    {\r\n      name: \"\",\r\n      email: \"\",\r\n      businessName: \"\",\r\n      industry: \"\",\r\n      description: \"\",\r\n      productDetails: \"\",\r\n      address: \"\",\r\n      phone: \"\",\r\n    },\r\n  ],\r\n  currentBusiness: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_BUSINESS:\r\n      return {\r\n        ...state,\r\n        currentBusiness: action.payload,\r\n      };\r\n    case GET_BUSINESS_EMPTY:\r\n      return {\r\n        ...state,\r\n        currentBusiness: action.payload,\r\n      };\r\n    case UPDATE_BUSINESS:\r\n      return {\r\n        ...state,\r\n        currentBusiness: action.payload,\r\n      };\r\n    case GET_ALL_BUSINESSES:\r\n      return {\r\n        ...state,\r\n        businesses: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Profile.jsx",["135"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  TextField,\r\n  Select,\r\n  FormControl,\r\n  Modal,\r\n  MenuItem,\r\n  Button,\r\n  CardActionArea,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport BackdropFilter from \"react-backdrop-filter\";\r\nimport moment from \"moment\";\r\n\r\nimport { updateAppbar } from \"../actions/AppbarActions\";\r\nimport { getBusiness, updateBusiness } from \"../actions/BusinessesActions\";\r\nimport { getUserPosts } from \"../actions/ForumsActions\";\r\n\r\nimport CurrentPost from \"./CurrentPost\";\r\nimport Chart from \"./Chart\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    marginTop: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Profile = ({\r\n  updateAppbar,\r\n  forums: { userPosts },\r\n  getBusiness,\r\n  updateBusiness,\r\n  businesses: { currentBusiness },\r\n  getUserPosts,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    updateAppbar(4);\r\n    getBusiness();\r\n    getUserPosts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const [business, setBusiness] = useState({});\r\n\r\n  useEffect(() => {\r\n    setBusiness({\r\n      ...business,\r\n      name: currentBusiness.name,\r\n      email: currentBusiness.email,\r\n      businessName: currentBusiness.businessName,\r\n      industry: currentBusiness.industry,\r\n      description: currentBusiness.description,\r\n      productDetails: currentBusiness.productDetails,\r\n      address: currentBusiness.address,\r\n      phone: currentBusiness.phone,\r\n      url: currentBusiness.url,\r\n    });\r\n    // eslint-disable-next-line\r\n  }, [currentBusiness]);\r\n\r\n  const updateClick = () => {\r\n    updateBusiness(business);\r\n  };\r\n\r\n  const [blur, setBlur] = useState(null);\r\n\r\n  const [openPost, setOpenPost] = useState(false);\r\n\r\n  const handleClosePost = () => {\r\n    setOpenPost(false);\r\n    setBlur(\"blur(0px)\");\r\n  };\r\n\r\n  const [postID, setPostID] = useState(\"\");\r\n\r\n  const viewPost = (id) => {\r\n    setOpenPost(true);\r\n    setBlur(\"blur(5px)\");\r\n    setPostID(id);\r\n  };\r\n\r\n  var disableUpdate = false;\r\n  var message = \"\";\r\n\r\n  if (\r\n    !business.name ||\r\n    !business.businessName ||\r\n    !business.email ||\r\n    !business.industry ||\r\n    !business.description ||\r\n    !business.productDetails ||\r\n    !business.address ||\r\n    !business.url ||\r\n    !business.phone\r\n  ) {\r\n    disableUpdate = true;\r\n    message = \"Please fill in all the fields.\";\r\n  } else {\r\n    disableUpdate = false;\r\n    message = \"\";\r\n  }\r\n  const businessForm = (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={2}\r\n    >\r\n      <Grid item md={6} sm={6} style={{ textAlign: \"left\" }}>\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: \"900\" }}>\r\n          Name\r\n        </Typography>\r\n        <TextField\r\n          variant=\"filled\"\r\n          defaultValue={currentBusiness.name}\r\n          value={business.name}\r\n          error={!business.name}\r\n          inputProps={{ maxLength: 30 }}\r\n          onChange={(e) => setBusiness({ ...business, name: e.target.value })}\r\n          fullWidth\r\n          margin=\"dense\"\r\n        />\r\n      </Grid>\r\n      <Grid item md={6} sm={6} style={{ textAlign: \"left\" }}>\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: \"900\" }}>\r\n          Business Name\r\n        </Typography>\r\n        <TextField\r\n          variant=\"filled\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          defaultValue={currentBusiness.businessName}\r\n          value={business.businessName}\r\n          error={!business.businessName}\r\n          inputProps={{ maxLength: 30 }}\r\n          onChange={(e) =>\r\n            setBusiness({\r\n              ...business,\r\n              businessName: e.target.value,\r\n            })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item md={6} sm={6} style={{ textAlign: \"left\" }}>\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: \"900\" }}>\r\n          Email\r\n        </Typography>\r\n        <TextField\r\n          variant=\"filled\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          defaultValue={currentBusiness.email}\r\n          value={business.email}\r\n          error={!business.email}\r\n          onChange={(e) => setBusiness({ ...business, email: e.target.value })}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item md={6} sm={6} style={{ textAlign: \"left\" }}>\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: \"900\" }}>\r\n          Industry\r\n        </Typography>\r\n        <FormControl className={classes.formControl}>\r\n          <Select\r\n            margin=\"dense\"\r\n            variant=\"filled\"\r\n            labelId=\"select-industry\"\r\n            id=\"select-industry\"\r\n            defaultValue={currentBusiness.industry}\r\n            value={business.industry}\r\n            error={!business.industry}\r\n            onChange={(e) =>\r\n              setBusiness({\r\n                ...business,\r\n                industry: e.target.value,\r\n              })\r\n            }\r\n          >\r\n            <MenuItem value={\"Art\"}>Art</MenuItem>\r\n            <MenuItem value={\"Automotive\"}>Automotive</MenuItem>\r\n            <MenuItem value={\"Construction\"}>Construction</MenuItem>\r\n            <MenuItem value={\"Consultancy\"}>Consultancy</MenuItem>\r\n            <MenuItem value={\"Education\"}>Education</MenuItem>\r\n            <MenuItem value={\"Entertainment\"}>Entertainment</MenuItem>\r\n            <MenuItem value={\"Finance\"}>Finance</MenuItem>\r\n            <MenuItem value={\"Food and Beverage\"}>Food and Beverage</MenuItem>\r\n            <MenuItem value={\"Marketing\"}>Marketing</MenuItem>\r\n            <MenuItem value={\"Real Estate\"}>Real Estate</MenuItem>\r\n            <MenuItem value={\"Technology\"}>Technology</MenuItem>\r\n            <MenuItem value={\"Transportation\"}>Transportation</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item md={12} sm={12} style={{ textAlign: \"left\" }}>\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: \"900\" }}>\r\n          Description\r\n        </Typography>\r\n        <TextField\r\n          variant=\"filled\"\r\n          fullWidth\r\n          multiline\r\n          margin=\"dense\"\r\n          defaultValue={currentBusiness.description}\r\n          value={business.description}\r\n          error={!business.description}\r\n          inputProps={{ maxLength: 300 }}\r\n          onChange={(e) =>\r\n            setBusiness({\r\n              ...business,\r\n              description: e.target.value,\r\n            })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item md={12} sm={12} style={{ textAlign: \"left\" }}>\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: \"900\" }}>\r\n          Product Details\r\n        </Typography>\r\n        <TextField\r\n          variant=\"filled\"\r\n          fullWidth\r\n          multiline\r\n          margin=\"dense\"\r\n          defaultValue={currentBusiness.productDetails}\r\n          value={business.productDetails}\r\n          error={!business.productDetails}\r\n          inputProps={{ maxLength: 350 }}\r\n          onChange={(e) =>\r\n            setBusiness({\r\n              ...business,\r\n              productDetails: e.target.value,\r\n            })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item md={12} sm={12} style={{ textAlign: \"left\" }}>\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: \"900\" }}>\r\n          Address\r\n        </Typography>\r\n        <TextField\r\n          variant=\"filled\"\r\n          fullWidth\r\n          multiline\r\n          margin=\"dense\"\r\n          defaultValue={currentBusiness.address}\r\n          value={business.address}\r\n          error={!business.address}\r\n          inputProps={{ maxLength: 100 }}\r\n          onChange={(e) =>\r\n            setBusiness({ ...business, address: e.target.value })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item md={6} sm={6} style={{ textAlign: \"left\" }}>\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: \"900\" }}>\r\n          Website Link\r\n        </Typography>\r\n        <TextField\r\n          variant=\"filled\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          defaultValue={currentBusiness.url}\r\n          value={business.url}\r\n          error={!business.url}\r\n          onChange={(e) => setBusiness({ ...business, url: e.target.value })}\r\n        />\r\n      </Grid>\r\n      <Grid item md={6} sm={6} style={{ textAlign: \"left\" }}>\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: \"900\" }}>\r\n          Phone\r\n        </Typography>\r\n        <TextField\r\n          variant=\"filled\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          defaultValue={currentBusiness.phone}\r\n          value={business.phone}\r\n          error={!business.phone}\r\n          inputProps={{ maxLength: 10 }}\r\n          onChange={(e) => setBusiness({ ...business, phone: e.target.value })}\r\n        />\r\n      </Grid>\r\n      <Grid item md={12} sm={12} style={{ textAlign: \"left\" }}>\r\n        <Typography variant=\"body2\" style={{ fontWeight: \"bold\" }}>\r\n          No need to add http in the website link field. Please contact our\r\n          support if you encounter any issues or need help.\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          style={{ fontWeight: \"bold\", color: \"red\" }}\r\n        >\r\n          {message}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item md={4} sm={4}></Grid>\r\n      <Grid item md={4} sm={4}></Grid>\r\n      <Grid item md={4} sm={4}>\r\n        <Button\r\n          variant=\"text\"\r\n          style={{\r\n            backgroundColor:\r\n              disableUpdate === true\r\n                ? \"rgba(250, 58, 0, 0.25)\"\r\n                : \"rgba(0,0,0, 0.05)\",\r\n            color: disableUpdate === true ? \"red\" : \"black\",\r\n            width: \"100%\",\r\n          }}\r\n          onClick={updateClick}\r\n          disabled={disableUpdate}\r\n        >\r\n          {disableUpdate ? \"Field(s) empty\" : \"Update\"}\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  const content = (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={3}\r\n    >\r\n      {userPosts.map((item) => (\r\n        <Grid item md={12} lg={12} sm={12} xs={12} xl={12}>\r\n          <BackdropFilter\r\n            className=\"blurred\"\r\n            filter={\"blur(10px)\"}\r\n            html2canvasOpts={{\r\n              allowTaint: true,\r\n            }}\r\n            onDraw={() => {\r\n              console.log(\"Rendered !\");\r\n            }}\r\n          >\r\n            <Card\r\n              className=\"inside-container\"\r\n              style={{\r\n                backgroundColor: \"transparent\",\r\n                // backgroundColor: \"rgb(0,0,0)\",\r\n                // backgroundColor: \"rgba(0,0,0, 0.08)\",\r\n                display: \"flex\",\r\n              }}\r\n            >\r\n              <CardActionArea onClick={() => viewPost(item._id)}>\r\n                <div className={classes.details}>\r\n                  <CardContent className={classes.content}>\r\n                    <Typography\r\n                      component=\"h5\"\r\n                      variant=\"h5\"\r\n                      style={{\r\n                        fontFamily: \"Scope One, sans-serif\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {item.title}\r\n                    </Typography>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        gap: \"20px\",\r\n                        paddingBottom: \"10px\",\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                        {item.name}\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                        {moment(item.date).format(\"LLL\")}\r\n                      </Typography>\r\n                    </div>\r\n                    <Typography component=\"h6\" variant=\"h6\">\r\n                      {item.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </div>\r\n              </CardActionArea>\r\n            </Card>\r\n          </BackdropFilter>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        className=\"inside-container\"\r\n        style={{\r\n          backgroundColor: \"rgba(0,0,0, 0.08)\",\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n          spacing={4}\r\n          style={{\r\n            paddingTop: \"30px\",\r\n            paddingBottom: \"30px\",\r\n            color: \"black\",\r\n          }}\r\n        >\r\n          <Grid item md={3} xs={12} sm={12} style={{ padding: \"30px\" }}>\r\n            <br></br>\r\n            <Typography\r\n              variant=\"h4\"\r\n              style={{ textAlign: \"left\", fontWeight: \"900\" }}\r\n            >\r\n              Business Details\r\n            </Typography>\r\n            <Typography variant=\"body2\" style={{ textAlign: \"left\" }}>\r\n              We will use this information to display your business' details.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={8} xs={12} sm={12} style={{ padding: \"30px\" }}>\r\n            <BackdropFilter\r\n              className=\"blurred\"\r\n              filter={\"blur(10px)\"}\r\n              html2canvasOpts={{\r\n                allowTaint: true,\r\n              }}\r\n              onDraw={() => {\r\n                console.log(\"Rendered !\");\r\n              }}\r\n            >\r\n              <Card\r\n                style={{\r\n                  padding: \"30px\",\r\n                  backgroundColor: \"transparent\",\r\n                  // backgroundColor: \"rgb(0,0,0)\",\r\n                  // backgroundColor: \"rgba(0,0,0, 0.06)\",\r\n                  color: \"black\",\r\n                  boxShadow: \"none\",\r\n                }}\r\n              >\r\n                {currentBusiness !== \"\" && businessForm}\r\n\r\n                {currentBusiness === \"\" && businessForm}\r\n              </Card>\r\n            </BackdropFilter>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div\r\n        className=\"inside-container\"\r\n        style={{\r\n          backgroundColor: \"rgba(0,0,0, 0.08)\",\r\n          marginTop: \"60px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n          spacing={4}\r\n          style={{\r\n            paddingTop: \"30px\",\r\n            paddingBottom: \"30px\",\r\n            color: \"black\",\r\n          }}\r\n        >\r\n          <Grid item md={3} xs={12} sm={12} style={{ padding: \"30px\" }}>\r\n            <br></br>\r\n            <Typography\r\n              variant=\"h4\"\r\n              style={{ textAlign: \"left\", fontWeight: \"900\" }}\r\n            >\r\n              Your Posts\r\n            </Typography>\r\n            <Typography variant=\"body2\" style={{ textAlign: \"left\" }}>\r\n              Take a look at the discussions you have started. Click on a forum\r\n              post to expand it and view it. You can also view comments and make\r\n              new ones.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={8} xs={12} sm={12} style={{ padding: \"30px\" }}>\r\n            {content}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Modal\r\n          open={openPost}\r\n          onClose={handleClosePost}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          <CurrentPost postID={postID} />\r\n        </Modal>\r\n      </div>\r\n\r\n      <div\r\n        className=\"inside-container\"\r\n        style={{\r\n          backgroundColor: \"rgba(0,0,0, 0.08)\",\r\n          marginTop: \"60px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n          spacing={4}\r\n          style={{\r\n            paddingTop: \"30px\",\r\n            paddingBottom: \"30px\",\r\n            color: \"black\",\r\n          }}\r\n        >\r\n          <Grid item md={3} xs={12} sm={12} style={{ padding: \"30px\" }}>\r\n            <br></br>\r\n            <Typography\r\n              variant=\"h4\"\r\n              style={{ textAlign: \"left\", fontWeight: \"900\" }}\r\n            >\r\n              Your Performance\r\n            </Typography>\r\n            <Typography variant=\"body2\" style={{ textAlign: \"left\" }}>\r\n              View how much traffic Canadian Solutions generated for you in the\r\n              past week.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={8} xs={12} sm={12} style={{ padding: \"30px\" }}>\r\n            <Chart />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  forums: state.forums,\r\n  businesses: state.businesses,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateAppbar,\r\n  getBusiness,\r\n  updateBusiness,\r\n  getUserPosts,\r\n})(Profile);\r\n","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Blogs.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Test.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\BlogsReducer.jsx",["136"],"import { GET_ALL_BLOGS, GET_LATEST_BLOGS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  blogs: [],\r\n  latestBlogs: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_BLOGS:\r\n      return {\r\n        ...state,\r\n        blogs: action.payload,\r\n      };\r\n    case GET_LATEST_BLOGS:\r\n      return {\r\n        ...state,\r\n        latestBlogs: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Forums.jsx",["137"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nimport NewPost from \"./NewPost\";\r\nimport CurrentPost from \"./CurrentPost\";\r\nimport { updateAppbar } from \"../actions/AppbarActions\";\r\nimport { getAllPosts } from \"../actions/ForumsActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n    // width: \"100%\",\r\n  },\r\n  cover: {\r\n    width: \"50%\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(2),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  navigation: {\r\n    width: 500,\r\n    background: \"transparent\",\r\n    backgroundColor: \"rgba(0,0,0, 0.08)\",\r\n  },\r\n}));\r\n\r\nconst Forums = ({ updateAppbar, forums: { posts, comments }, getAllPosts }) => {\r\n  var test = window.localStorage.getItem(\"postComment\");\r\n\r\n  useEffect(() => {\r\n    updateAppbar(3);\r\n    getAllPosts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [sort, setSort] = useState(\"date\");\r\n\r\n  const sortChange = (event, newValue) => {\r\n    setSort(newValue);\r\n  };\r\n\r\n  const propComparator = (propName) => (a, b) => {\r\n    if (sort === \"date\") {\r\n      return a[propName] === b[propName]\r\n        ? 0\r\n        : a[propName] > b[propName]\r\n        ? -1\r\n        : 1;\r\n    } else {\r\n      return a[propName] === b[propName]\r\n        ? 0\r\n        : a[propName] < b[propName]\r\n        ? -1\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const [blur, setBlur] = useState(null);\r\n\r\n  const [openNew, setOpenNew] = useState(false);\r\n\r\n  const handleCloseNew = () => {\r\n    setOpenNew(false);\r\n    setBlur(\"blur(0px)\");\r\n  };\r\n\r\n  const newPost = () => {\r\n    setOpenNew(true);\r\n    setBlur(\"blur(5px)\");\r\n  };\r\n\r\n  const [openPost, setOpenPost] = useState(false);\r\n\r\n  const handleClosePost = () => {\r\n    setOpenPost(false);\r\n    setBlur(\"blur(0px)\");\r\n    // localStorage.removeItem(\"postComment\");\r\n  };\r\n\r\n  const [postID, setPostID] = useState(\"\");\r\n\r\n  const viewPost = (id) => {\r\n    setOpenPost(true);\r\n    setBlur(\"blur(5px)\");\r\n    setPostID(id);\r\n  };\r\n\r\n  const content = (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={3}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"body2\" style={{ fontWeight: \"bold\" }}>\r\n          Click on a forum post to expand it and view it. You can also view\r\n          comments and make new ones.\r\n        </Typography>\r\n      </Grid>\r\n      {posts.sort(propComparator(sort)).map((item) => (\r\n        <Grid item md={8} lg={8} sm={12} xs={12} xl={8}>\r\n          {/* <BackdropFilter\r\n            className=\"blurred\"\r\n            filter={\"blur(10px)\"}\r\n            html2canvasOpts={{\r\n              allowTaint: true,\r\n            }}\r\n            onDraw={() => {\r\n              console.log(\"Rendered !\");\r\n            }}\r\n          > */}\r\n          <Card\r\n            className=\"inside-container\"\r\n            style={{\r\n              backgroundColor: \"rgba(0,0,0, 0.08)\",\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <CardActionArea onClick={() => viewPost(item._id)}>\r\n              {/* <CardMedia\r\n              className={classes.cover}\r\n              image={item.image}\r\n              title=\"Live from space album cover\"\r\n            /> */}\r\n              <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                  <Typography\r\n                    component=\"h5\"\r\n                    variant=\"h5\"\r\n                    style={{\r\n                      fontFamily: \"Scope One, sans-serif\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    {item.title}\r\n                  </Typography>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      gap: \"20px\",\r\n                      paddingBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                      {item.name}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"subtitle1\"\r\n                      color=\"textSecondary\"\r\n                      // align=\"right\"\r\n                    >\r\n                      {moment(item.date).format(\"LLL\")}\r\n                    </Typography>\r\n                  </div>\r\n                  <Typography component=\"h6\" variant=\"h6\">\r\n                    {item.description}\r\n                  </Typography>\r\n                </CardContent>\r\n              </div>\r\n            </CardActionArea>\r\n          </Card>\r\n          {/* </BackdropFilter> */}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\" style={{ filter: blur }}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        style={{ paddingBottom: \"30px\" }}\r\n      >\r\n        <BottomNavigation\r\n          value={sort}\r\n          onChange={sortChange}\r\n          className={classes.navigation}\r\n          showLabels=\"true\"\r\n        >\r\n          <BottomNavigationAction label=\"Create new post\" onClick={newPost} />\r\n          <BottomNavigationAction label=\"Sort by title\" value=\"title\" />\r\n          <BottomNavigationAction label=\"Sort by latest\" value=\"date\" />\r\n          <BottomNavigationAction label=\"Sort by author name\" value=\"name\" />\r\n        </BottomNavigation>\r\n      </Grid>\r\n      {content}\r\n      <Modal\r\n        open={openNew}\r\n        onClose={handleCloseNew}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <NewPost />\r\n      </Modal>\r\n      <Modal\r\n        open={openPost}\r\n        onClose={handleClosePost}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <CurrentPost postID={postID} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  forums: state.forums,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateAppbar,\r\n  getAllPosts,\r\n})(Forums);\r\n","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\ForumsReducer.jsx",["138"],"import {\r\n  GET_ALL_POSTS,\r\n  GET_USER_POSTS,\r\n  GET_CURRENT_POST,\r\n  GET_COMMENTS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  comments: [],\r\n  userPosts: [],\r\n  currentPost: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n      };\r\n    case GET_USER_POSTS:\r\n      return {\r\n        ...state,\r\n        userPosts: action.payload,\r\n      };\r\n    case GET_CURRENT_POST:\r\n      return {\r\n        ...state,\r\n        currentPost: action.payload,\r\n      };\r\n    case GET_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\NewPost.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\CurrentPost.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Chart.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Login.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\reducers\\UserReducer.jsx",["139"],"import { LOGIN_USER, GET_USER, LOGIN_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: \"\",\r\n  userInfo: null,\r\n  loginError: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        userInfo: action.payload,\r\n      };\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        loginError: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\UserActions.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\BusinessesActions.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\ForumsActions.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\PrivateRoute.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\actions\\BlogsActions.jsx",[],"C:\\Users\\Moh\\Desktop\\School\\Semester 8\\Project 2\\canadian-solutions\\client\\src\\Components\\Faq.jsx",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":29},{"ruleId":"148","severity":1,"message":"149","line":7,"column":1,"nodeType":"150","endLine":17,"endColumn":3},{"ruleId":"144","severity":1,"message":"151","line":16,"column":8,"nodeType":"146","messageId":"147","endLine":16,"endColumn":14},{"ruleId":"144","severity":1,"message":"152","line":11,"column":17,"nodeType":"146","messageId":"147","endLine":11,"endColumn":25},{"ruleId":"148","severity":1,"message":"149","line":24,"column":1,"nodeType":"150","endLine":49,"endColumn":3},{"ruleId":"144","severity":1,"message":"153","line":76,"column":10,"nodeType":"146","messageId":"147","endLine":76,"endColumn":14},{"ruleId":"148","severity":1,"message":"149","line":8,"column":1,"nodeType":"150","endLine":23,"endColumn":3},{"ruleId":"144","severity":1,"message":"154","line":56,"column":7,"nodeType":"146","messageId":"147","endLine":56,"endColumn":11},{"ruleId":"148","severity":1,"message":"149","line":15,"column":1,"nodeType":"150","endLine":40,"endColumn":3},{"ruleId":"148","severity":1,"message":"149","line":9,"column":1,"nodeType":"150","endLine":29,"endColumn":3},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'composeWithDevTools' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Footer' is defined but never used.","'setLinks' is assigned a value but never used.","'blur' is assigned a value but never used.","'test' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]